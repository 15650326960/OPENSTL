Model info:
SimVP_Model(
  (enc): Encoder(
    (enc): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
    )
  )
  (dec): Decoder(
    (dec): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Sequential(
            (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): PixelShuffle(upscale_factor=2)
          )
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
    )
    (readout): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (hid): MidMetaNet(
    (enc): Sequential(
      (0): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
          (norm): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(384, 3072, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(3072, 384, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.010)
        )
        (reduction): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.023)
        )
      )
      (2): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.036)
        )
      )
      (3): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.049)
        )
      )
      (4): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.061)
        )
      )
      (5): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.074)
        )
      )
      (6): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.087)
        )
      )
      (7): MetaBlock(
        (block): ConvNeXtSubBlock(
          (conv_dw): Conv2d(256, 256, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=256)
          (norm): LayerNorm2d((256,), eps=1e-06, elementwise_affine=True)
          (mlp): ConvMlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (norm): Identity()
            (act): GELU()
            (drop): Dropout(p=0.0, inplace=False)
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (drop_path): DropPath(drop_prob=0.100)
        )
        (reduction): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
| module                     | #parameters or shape   | #flops     |
|:---------------------------|:-----------------------|:-----------|
| model                      | 10.088M                | 5.657G     |
|  enc.enc                   |  9.696K                |  68.616M   |
|   enc.enc.0.conv           |   0.384K               |   11.01M   |
|    enc.enc.0.conv.conv     |    0.32K               |    7.078M  |
|    enc.enc.0.conv.norm     |    64                  |    3.932M  |
|   enc.enc.1.conv           |   9.312K               |   57.606M  |
|    enc.enc.1.conv.conv     |    9.248K              |    56.623M |
|    enc.enc.1.conv.norm     |    64                  |    0.983M  |
|  dec                       |  46.401K               |  0.462G    |
|   dec.dec                  |   46.368K              |   0.461G   |
|    dec.dec.0.conv          |    37.056K             |    0.23G   |
|    dec.dec.1.conv          |    9.312K              |    0.23G   |
|   dec.readout              |   33                   |   0.786M   |
|    dec.readout.weight      |    (1, 32, 1, 1)       |            |
|    dec.readout.bias        |    (1,)                |            |
|  hid.enc                   |  10.031M               |  5.127G    |
|   hid.enc.0                |   2.482M               |   1.269G   |
|    hid.enc.0.block         |    2.383M              |    1.219G  |
|    hid.enc.0.reduction     |    98.56K              |    50.332M |
|   hid.enc.1.block          |   1.064M               |   0.544G   |
|    hid.enc.1.block.gamma   |    (256,)              |            |
|    hid.enc.1.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.1.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.1.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.2.block          |   1.064M               |   0.544G   |
|    hid.enc.2.block.gamma   |    (256,)              |            |
|    hid.enc.2.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.2.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.2.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.3.block          |   1.064M               |   0.544G   |
|    hid.enc.3.block.gamma   |    (256,)              |            |
|    hid.enc.3.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.3.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.3.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.4.block          |   1.064M               |   0.544G   |
|    hid.enc.4.block.gamma   |    (256,)              |            |
|    hid.enc.4.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.4.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.4.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.5.block          |   1.064M               |   0.544G   |
|    hid.enc.5.block.gamma   |    (256,)              |            |
|    hid.enc.5.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.5.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.5.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.6.block          |   1.064M               |   0.544G   |
|    hid.enc.6.block.gamma   |    (256,)              |            |
|    hid.enc.6.block.conv_dw |    12.8K               |    6.423M  |
|    hid.enc.6.block.norm    |    0.512K              |    0.655M  |
|    hid.enc.6.block.mlp     |    1.051M              |    0.537G  |
|   hid.enc.7                |   1.163M               |   0.594G   |
|    hid.enc.7.block         |    1.064M              |    0.544G  |
|    hid.enc.7.reduction     |    98.688K             |    50.332M |
--------------------------------------------------------------------------------
1726455509326 tiger error 
  | Name      | Type        | Params
------------------------------------------
0 | model     | SimVP_Model | 10.1 M
1 | criterion | MSELoss     | 0     
------------------------------------------
10.1 M    Trainable params
0         Non-trainable params
10.1 M    Total params
40.350    Total estimated model params size (MB)
