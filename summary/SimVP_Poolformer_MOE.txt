Model info:
SimVP_Model(
  (enc): Encoder(
    (enc): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
    )
  )
  (dec1): Decoder1(
    (dec): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Sequential(
            (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): PixelShuffle(upscale_factor=2)
          )
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU()
        )
      )
    )
    (readout): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (dec2): Decoder2(
    (dec): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Sequential(
            (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): PixelShuffle(upscale_factor=2)
          )
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU(inplace=True)
        )
      )
    )
    (readout): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (dec3): Decoder3(
    (dec): Sequential(
      (0): ConvSC(
        (conv): BasicConv2d(
          (conv): Sequential(
            (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): PixelShuffle(upscale_factor=2)
          )
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): ConvSC(
        (conv): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): GroupNorm(2, 32, eps=1e-05, affine=True)
          (act): SiLU(inplace=True)
        )
      )
    )
    (readout): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (hid): MidMetaNet(
    (enc): Sequential(
      (0): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 384, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 384, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(384, 3072, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(3072, 384, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.010)
        )
        (reduction): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.023)
        )
      )
      (2): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.036)
        )
      )
      (3): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.049)
        )
      )
      (4): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.061)
        )
      )
      (5): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.074)
        )
      )
      (6): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.087)
        )
      )
      (7): MetaBlock(
        (block): PoolFormerSubBlock(
          (norm1): GroupNorm(1, 256, eps=1e-05, affine=True)
          (token_mixer): Pooling(
            (pool): AvgPool2d(kernel_size=3, stride=1, padding=1)
          )
          (norm2): GroupNorm(1, 256, eps=1e-05, affine=True)
          (mlp): Mlp(
            (fc1): Conv2d(256, 2048, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
            (fc2): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            (drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): DropPath(drop_prob=0.100)
        )
        (reduction): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
| module                           | #parameters or shape   | #flops     |
|:---------------------------------|:-----------------------|:-----------|
| model                            | 10.078M                | 10.613G    |
|  enc.enc                         |  9.696K                |  68.616M   |
|   enc.enc.0.conv                 |   0.384K               |   11.01M   |
|    enc.enc.0.conv.conv           |    0.32K               |    7.078M  |
|    enc.enc.0.conv.norm           |    64                  |    3.932M  |
|   enc.enc.1.conv                 |   9.312K               |   57.606M  |
|    enc.enc.1.conv.conv           |    9.248K              |    56.623M |
|    enc.enc.1.conv.norm           |    64                  |    0.983M  |
|  dec1                            |  46.401K               |  1.825G    |
|   dec1.dec                       |   46.368K              |   0.461G   |
|    dec1.dec.0.conv               |    37.056K             |    0.23G   |
|    dec1.dec.1.conv               |    9.312K              |    0.23G   |
|   dec1.readout                   |   33                   |   0.786M   |
|    dec1.readout.weight           |    (1, 32, 1, 1)       |            |
|    dec1.readout.bias             |    (1,)                |            |
|  dec2                            |  46.401K               |  1.821G    |
|   dec2.dec                       |   46.368K              |   0.461G   |
|    dec2.dec.0.conv               |    37.056K             |    0.23G   |
|    dec2.dec.1.conv               |    9.312K              |    0.23G   |
|   dec2.readout                   |   33                   |   0.786M   |
|    dec2.readout.weight           |    (1, 32, 1, 1)       |            |
|    dec2.readout.bias             |    (1,)                |            |
|  dec3                            |  46.401K               |  1.821G    |
|   dec3.dec                       |   46.368K              |   0.461G   |
|    dec3.dec.0.conv               |    37.056K             |    0.23G   |
|    dec3.dec.1.conv               |    9.312K              |    0.23G   |
|   dec3.readout                   |   33                   |   0.786M   |
|    dec3.readout.weight           |    (1, 32, 1, 1)       |            |
|    dec3.readout.bias             |    (1,)                |            |
|  hid.enc                         |  9.929M                |  5.078G    |
|   hid.enc.0                      |   2.464M               |   1.26G    |
|    hid.enc.0.block               |    2.365M              |    1.21G   |
|    hid.enc.0.reduction           |    98.56K              |    50.332M |
|   hid.enc.1.block                |   1.052M               |   0.538G   |
|    hid.enc.1.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.1.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.1.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.1.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.1.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.2.block                |   1.052M               |   0.538G   |
|    hid.enc.2.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.2.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.2.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.2.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.2.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.3.block                |   1.052M               |   0.538G   |
|    hid.enc.3.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.3.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.3.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.3.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.3.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.4.block                |   1.052M               |   0.538G   |
|    hid.enc.4.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.4.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.4.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.4.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.4.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.5.block                |   1.052M               |   0.538G   |
|    hid.enc.5.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.5.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.5.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.5.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.5.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.6.block                |   1.052M               |   0.538G   |
|    hid.enc.6.block.layer_scale_1 |    (256,)              |            |
|    hid.enc.6.block.layer_scale_2 |    (256,)              |            |
|    hid.enc.6.block.norm1         |    0.512K              |    0.655M  |
|    hid.enc.6.block.norm2         |    0.512K              |    0.655M  |
|    hid.enc.6.block.mlp           |    1.051M              |    0.537G  |
|   hid.enc.7                      |   1.151M               |   0.589G   |
|    hid.enc.7.block               |    1.052M              |    0.538G  |
|    hid.enc.7.reduction           |    98.688K             |    50.332M |
--------------------------------------------------------------------------------
1726795787694 tiger error 
  | Name      | Type        | Params
------------------------------------------
0 | model     | SimVP_Model | 10.1 M
1 | criterion | MSELoss     | 0     
------------------------------------------
10.1 M    Trainable params
0         Non-trainable params
10.1 M    Total params
40.312    Total estimated model params size (MB)
